@{
    ViewData["Title"] = "Gestione Album Fotografico";
    string searchString = "fo";
}
@model List<Photo>

@* Create *@
@if (User.IsInRole("ADMIN"))
{
    <div class="row">
        <div class="col-12 my-2">
            <a href="@Url.Action("Create","Photo")" class="btn btn-success ">Aggiungi Foto</a>
        </div>
    </div>
}

@* BARRA RICERCA *@
@* <div class="row mt-3 mb-1">
    <h2 class="col-12">Cerca la foto per titolo</h2>
</div>
<div class="row mb-3 mt-1 ms-1">
    <input id="search-bar" type="text" class="col-3" />
</div> *@

@* AVVISI *@
@* <div class="row my-3"> *@
    @* NO FOTO *@
 @*    <div id="no-photos-message" class="col d-none">
        <h2>Nessuna Foto presente nell album, scattane qualcuna!</h2>
    </div> *@
    @* SPINNER LOADING *@
  @*   <div id="spinner" class="col">
        <div class="spinner-border" role="status"></div>
    </div>
</div> *@
@* CARD CONTAINER *@
@* <div id="my-card-container" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">
</div> *@




<div class="row">
    @if (Model != null && Model.Count > 0)
    {
        @foreach(Photo photo in Model)
        {
            <div class="@photo.Title col-6 my-3 d-flex ">
                <div class="card" style="width: 18rem;">
                    <img class="card-img-top" src="@photo.ImageSrc" alt="immagine @photo.Title">
                </div>
                <div class="card" style="width: 14rem;">
                    <div class="card-body">
                        <div class="small card-text mb-3">id: @photo.Id</div>
                        <h5 class="card-title">@photo.Title</h5>
                        <p class="card-text">@photo.Description</p>
                        <p class="card-text">
                            <ul class="list-unstyled">
                                @if (photo.Categories != null && photo.Categories.Count > 0)
                                {
                                    <li>
                                        Categorie:
                                        <ul class="list-unstyled">
                                            @foreach (Category category in @photo.Categories)
                                            {
                                                <li>&nbsp;&nbsp;&nbsp;- @category.Title</li>
                                            }
                                        </ul>
                                    </li>
                                }
                                else
                                {
                                    <li>Nessuna Categoria per questa foto</li>
                                }
                            </ul>
                        </p>
                        @if (photo.Visibility)
                        {
                            <div class="small card-text mb-3">Visibile</div>
                        }else{
                            <div class="small card-text mb-3">Nascosta</div>
                        }
                        


                    </div>
                </div>

                @* BUTTONS *@
                
                <div class="card d-flex flex-column justify-content-center border-0" style="width: 3rem;">
                    @* DETTAGLI *@
                    <a href="@Url.Action("Details","Photo", new{id=@photo.Id})" class="btn btn-primary my-1 ms-1">
                        <i class="bi bi-arrow-up-right-square-fill"></i>
                    </a>
                    @if (User.IsInRole("ADMIN"))
                    {
                        @* MODIFICA *@
                        <a href="@Url.Action("Edit","Photo",new{id=photo.Id})" class="btn btn-warning my-1 ms-1">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        @* VISIBILITÀ *@
                        @* TO DO, Bisogna creare una chiamata post che cambia la visibilità della foto *@
                        @if (photo.Visibility)
                        {
                            <form asp-controller="Photo" asp-action="SwitchVisibility" asp-route-id="@photo.Id" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-info my-1 ms-1">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </form>

                        }
                        else
                        {
                            <form asp-controller="Photo" asp-action="SwitchVisibility" asp-route-id="@photo.Id" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-secondary my-1 ms-1">
                                    <i class="bi bi-eye-slash"></i>
                                </button>
                            </form>


                        }
                        @* ELIMINA *@

                        <form asp-controller="Photo" asp-action="Delete" asp-route-id="@photo.Id" method="post">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger my-1 ms-1">
                                <i class="bi bi-x-square-fill"></i>
                            </button>
                        </form>
                    }
                    
                </div>
            </div>
        }
    }
    else
    {
        <h2>Nessuna foto ricevuta...</h2>
    }
</div>

@section Scripts{
   @*  <script type="text/javascript" >

        //riferimenti al dom

        const cardContainer = document.getElementById("my-card-container");
        const spinner = document.getElementById("spinner");
        const noPhotosMessage = document.getElementById("no-photos-message");
        const searchBar = document.getElementById("search-bar");
        let searchValue = "";

        SearchPhotoByTitle(searchValue);
        searchBar.addEventListener('keyup', function () {
            searchValue = searchBar.value;
            SearchPhotoByTitle(searchValue);
            const cardToVisualize = document.querySelectorAll("." + searchValue)
        });

        function SearchPhotoByTitle(photoTitle) {

            axios.get("/api/Photo/SearchPhotoByTitle",
            {
                params: { title: photoTitle }

            }).then((response) => {
                console.log(response.data);
                const photos = response.data;
                if (photos == null || photos.length == 0) {
                    spinner.classList.add("d-none");
                    noPhotosMessage.classList.remove("d-none");
                    cardContainer.innerHTML = "";
                } else {
                    noPhotosMessage.classList.add("d-none");
                    spinner.classList.add("d-none");
                    cardContainer.innerHTML = "";
                    photos.forEach(photo => {
                        cardContainer.innerHTML +=
                        `
                            <div class="col-6 my-3 d-flex ">
                                <div class="card" style="width: 18rem;">
                                    <img src="${photo.imageSrc}" class="card-img-top" alt="Immagine${photo.title} ">
                                    <div class="card-body">
                                        <h5 class="card-title">Titolo ${photo.title}</h5>
                                        <p class="card-text">${photo.description}</p>
                                        
                                    </div>
                                </div>
                            </div>
                        `
                    });

                }
            });
        }
    </script> *@
}

